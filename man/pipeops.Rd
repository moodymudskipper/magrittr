% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipes.R
\name{pipeops}
\alias{pipeops}
\alias{\%>\%}
\alias{\%<>\%}
\alias{\%T>\%}
\alias{\%$\%}
\alias{\%nowarn>\%}
\alias{\%nomsg>\%}
\alias{\%strict>\%}
\alias{\%try>\%}
\alias{\%P>\%}
\alias{\%V>\%}
\alias{\%D>\%}
\alias{\%summary>\%}
\alias{\%glimpse>\%}
\alias{\%skim>\%}
\alias{\%L>\%}
\alias{\%ae>\%}
\alias{\%compare>\%}
\alias{\%quietly>\%}
\alias{\%auto_browse>\%}
\title{Pipe operators to enhance magrittr}
\usage{
lhs \%>\% rhs

lhs \%<>\% rhs

lhs \%T>\% rhs

lhs \%$\% rhs

lhs \%nowarn>\% rhs

lhs \%nomsg>\% rhs

lhs \%strict>\% rhs

lhs \%try>\% rhs

lhs \%P>\% rhs

lhs \%V>\% rhs

lhs \%D>\% rhs

lhs \%summary>\% rhs

lhs \%glimpse>\% rhs

lhs \%skim>\% rhs

lhs \%L>\% rhs

lhs \%ae>\% rhs

lhs \%compare>\% rhs

lhs \%quietly>\% rhs

lhs \%auto_browse>\% rhs
}
\arguments{
\item{lhs}{A value or the magrittr placeholder.}

\item{rhs}{A function call using the magrittr semantics.}
}
\description{
These operators include  magrittr's standard pipe operators \code{\%>\%},
\code{\%T>\%}, \code{\%$\%} and \code{\%<>\%} and additional ones which
provide side effects but mostly return the same output as \code{\%>\%}
(with the exception of \code{\%strict>\%} and \code{\%try>\%}).
}
\details{
In \emph{magrittr} pipe operators are all the same functions, and are recognized
in the code by their names, in \emph{mmpipe} they inherit from the class \code{pipe}
and their behavior is ruled by their attribute \code{wrap} explained in \link{new_pipe}.
They also have their own printing method.

\describe{
\item{\%>\%}{Pipe an object forward into a function or call expression.
(see \code{\link[magrittr]{pipe}})}
\item{\%T>\%}{Pipe a value forward into a function- or call expression and
return the original value instead of the result (see
\code{\link[magrittr]{tee}})}
\item{\%$>\%}{Expose the names in \code{lhs} to the \code{rhs} expression. This is
useful when functions do not have a built-in data argument (see
\code{\link[magrittr]{exposition}})}
\item{\%<>\%}{Pipe an object forward into a function or call expression and update the
\code{lhs} object with the resulting value (see \code{\link[magrittr]{compound}})}
\item{\%D>\%}{Debug the pipe chain at the relevant step}
\item{\%V>\%}{Use \code{View()} on the output}
\item{\%L>\%}{Log the relevant call and execution time to the console}
\item{\%P>\%}{Use \code{print()} on the output}
\item{\%summary>\%}{Print the \code{summary()} off the output}
\item{\%glimpse>\%}{Use \code{tibble::glimpse} on the output}
\item{\%skim>\%}{Use \code{skimr::skim} on the output}
\item{\%nowarn>\%}{Silence warnings}
\item{\%nomsg>\%}{Silence messages}
\item{\%strict>\%}{Fail on warning}
\item{\%try>\%}{Try, and in case of failure prints error and returns input}
}
}
\examples{
# print a pipe objects
`\%T>\%`

\dontrun{
# debug the chain
iris \%>\% head(2) \%D>\% `[`(4:5)

# View steps of chain in the viewer
iris \%V>\% head(2) \%V>\% `[`(4:5)

# Log steps in the console
iris \%L>\% {Sys.sleep(1);head(.,2)} \%L>\% {Sys.sleep(2);.[4:5]}
}

# Use print or summary on output
iris \%P>\% head(2) \%P>\% `[`(4:5)
iris \%summary>\% head(2) \%summary>\% `[`(4:5)

\dontrun{
# Use glimpse or skim on output
iris \%glimpse>\% head(2) \%glimpse>\% `[`(4:5) 
iris \%skim>\% head(2) \%skim>\% `[`(4:5) 
}

# Try an operation and ignore if failure
iris \%try>\% {stop("FAILURE!")} \%>\% head(2)

# Silence warnings or messages
-1 \%nowarn>\% sqrt
iris \%nomsg>\% {message("allo?");head(.,2)}

# Fail on a warning
\dontrun{
-1 \%strict>\% sqrt
}

}
